<runtime ram="50M" caps="500" binary="init">

	<requires>
		<capture/>
		<file_system label="target" writeable="yes"/>
		<rtc/>
		<timer/>
	</requires>

	<config verbose="yes">
		<parent-provides>
			<service name="ROM"/>
			<service name="LOG"/>
			<service name="CPU"/>
			<service name="PD"/>
			<service name="Timer"/>
			<service name="Capture"/>
			<service name="Rtc"/>
			<service name="File_system"/>
		</parent-provides>

		<default caps="100"/>

		<start name="screenshot">
			<resource name="RAM" quantum="32M"/>
			<config>
				<libc stdin="/dev/null" stdout="/dev/log" stderr="/dev/log"/>
				<vfs>
					<fs/>
					<dir name="dev"> <null/> <log/> </dir>
				</vfs>
			</config>
			<route>
				<service name="ROM" label="trigger"> <child name="dynamic_rom"/> </service>
				<service name="File_system"> <parent identity="target"/> </service>
				<any-service> <parent/> <any-child/> </any-service>
			</route>
		</start>

		<start name="dynamic_rom">
			<resource name="RAM" quantum="1M"/>
			<provides> <service name="ROM"/> </provides>
			<config>
				<rom name="trigger">
					<empty />
					<sleep milliseconds="100"/>
					<inline> <testfile enabled="yes"/> </inline>
					<sleep milliseconds="2000"/>
					<inline> <testfile1234 enabled="no"/> </inline>
					<sleep milliseconds="10000"/>
					<empty />
				</rom>
			</config>
			<route>
				<any-service> <parent/> <any-child/> </any-service>
			</route>
		</start>
	</config>

	<content>

		<!-- components -->
		<rom label="screenshot"/>
		<rom label="init"/>
		<rom label="dynamic_rom"/>

		<!-- libraries -->
		<rom label="ld.lib.so"/>
		<rom label="libc.lib.so"/>
		<rom label="libm.lib.so"/>
		<rom label="vfs.lib.so"/>
		<rom label="zlib.lib.so"/>
		<rom label="libpng.lib.so"/>

	</content>

</runtime>
